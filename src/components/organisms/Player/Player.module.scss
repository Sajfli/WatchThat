@import 'utils/master';

$controls-height: 50px;

.playerContainer {
    --player-width: #{$player-width};
    --max-width: 800px;

    width: 100%;
    height: 100%;

    // width: var(--max-width);
    // width: var(--player-width);
    // max-width: var(--max-width);
    // height: calc(9 / 16 * var(--max-width));

    background-color: #000;

    // max-height: 80vh !important;

    position: relative;
}

.playerContainer.expanded {
    --player-width: calc(100vw - #{$sidebar-width});
}

.Player {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;

    background-color: #000;
    position: absolute;
}

.ReactPlayer {
    z-index: 1;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    // pointer-events: none;
}

.moveControls.fullscreen .ReactPlayer {
    height: calc(100% - #{$controls-height});
}

.Player.mouseNotMoving {
    cursor: none;
}

.Player:hover .controls {
    display: flex;
}

.Player:hover .title {
    display: block;
}

.mouseNotMoving .controls:not(:hover),
.mouseNotMoving .title {
    display: none !important;
}

.title {
    position: absolute;
    top: 0;
    left: 0;
    min-height: 50px;
    width: 100%;
    line-height: 30px;
    font-size: 18px;
    padding: 10px 40px;

    background: linear-gradient(#000000a9, transparent);

    display: none;
}

.controls {
    display: none;
    // display: flex;

    position: absolute;
    bottom: 0;
    left: 0;

    height: $controls-height;
    width: 100%;

    padding: 10px;

    justify-content: space-between;
    align-items: center;

    background: linear-gradient(#0000, #000000a9);

    z-index: 9999;
}

.moveControls .controls {
    // background-color: blue;
    bottom: -$controls-height;
    display: flex !important;
    background-color: #000;
}

.moveControls.fullscreen .controls {
    bottom: 0;
}

.leftCorner {
    flex: 1;
}

.rightCorner {
    flex: 2;
}

.leftCorner,
.rightCorner {
    display: flex;
    justify-content: space-around;
    align-items: center;
}

.controlComponent {
    width: 30px;
    height: 30px;
    line-height: 30px;
    text-align: center;
    font-size: 22px;
}

.controlComponent.btn {
    color: #ccc;
    cursor: pointer;
}

.controlComponent.btn:hover {
    color: #fff;
}

.progressBar {
    // background-color: red;
    position: relative;
    height: 10px;

    flex: 5;

    transform: scaleY(0.5);
    transition: transform linear 0.05s;
    cursor: pointer;
}

.progressBar:hover {
    transform: scaleY(1);
}

.progressBarLayer,
.progressBar .watched {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
}

.progressBarLayer {
    background-color: #cccccc46;
}

.progressBar .watched {
    background-color: #e9e9e9;
    transform: scaleX(0);
    transform-origin: top left;
}

.volume {
    position: relative;
}

.volume:hover .volumeBarBox {
    display: flex;
}

.volumeBarBox {
    display: none;

    transition: display 0.2s linear 0.2s;

    position: absolute;
    bottom: 0;

    padding-bottom: 35px;
    width: 35px;
    height: 135px;

    left: -2.5px;

    justify-content: center;
    align-items: center;

    z-index: 1;
}

.volumeBarBox::before {
    content: '';
    top: 0;
    left: 0;
    width: 100%;
    height: 100px;

    position: absolute;

    background-color: #6363637e;
    border-radius: 5px;
}

@keyframes play {
    from {
        transform: translate(-50%, -50%) scale(0.6);
        opacity: 0.8;
    }
    to {
        transform: translate(-50%, -50%) scale(1.2);
        opacity: 0;
    }
}

.playCircle {
    display: none;

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 100px;
    color: #161616;

    z-index: 100;

    animation-name: play;
    animation-timing-function: ease-in-out;
    animation-duration: 0.6s;
    animation-fill-mode: forwards;
}
